import { ComponentFixture, TestBed } from '@angular/core/testing';
import { HttpClientModule } from '@angular/common/http';
import { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';
import { RouterTestingModule } from '@angular/router/testing';
import { LoadInvoiceComponent } from './load-invoice.component';


describe('AgreementsComponent', () => {
  let component: LoadInvoiceComponent;
  let fixture: ComponentFixture<LoadInvoiceComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      schemas: [CUSTOM_ELEMENTS_SCHEMA],
      imports: [HttpClientModule, RouterTestingModule ], 
      declarations: [LoadInvoiceComponent]

    })
      .compileComponents();
  });

  beforeEach(() => {
    fixture = TestBed.createComponent(LoadInvoiceComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  afterEach(() => {
    jest.restoreAllMocks();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });

  it('Prueba del LocalStorage Saving Ok', () => {
    jest.spyOn(Storage.prototype, 'getItem');
    jest.spyOn(Storage.prototype, 'setItem');
    const request = [
      {
        "NIT Proveedor": 8600001356,
        "Nombre Proveedor": "AZUL K SAS",
        "fileName": "Bdb_Factoring_V04.xlsm",
        "fileStatus": 1
      },
      {
        "fields_error": {},
        "noFactura": "B1599373"
      }
    ]
    const data = '[{"fileName":"Bdb_Factoring_V04.xlsm","data":[{"NRO FACTURA":"B1599373","CUFE/CUDE":"e6896bc717311343ffc304aa0aa7b3973aa76d908b59c131bb650f448d30a0b10a00f03f8ea66e664d87a9506b633f86","FECHA EXPEDICIÓN":"12/1/2022","FECHA VENCIMIENTO CLIENTE":"30/01/2023","Nombre Proveedor":"AZUL K SAS","NIT Proveedor":8600001356,"Nombre Deudor":"D1 SAS","NIT Deudor":9002769621,"VIN":"KNAB2512APT036852","Valor Factura RADIAN":112233306,"Valor Factura DESEMBOLSO":112233306},{"NRO FACTURA":"B1599375","CUFE/CUDE":"2bbb8daf769f330cb51c5d113816b4275fb217c54cc38665516ca3ce64904b13b440e11a62df6f44ac7fc03e75d8a1ea","FECHA EXPEDICIÓN":"12/1/2022","FECHA VENCIMIENTO CLIENTE":"30/01/2023","Nombre Proveedor":"AZUL K SAS","NIT Proveedor":8600001356,"Nombre Deudor":"D1 SAS","NIT Deudor":9002769621,"VIN":"KNAB2512APT036758","Valor Factura RADIAN":166693297,"Valor Factura DESEMBOLSO":166693297},{"NRO FACTURA":"B1599379","CUFE/CUDE":"8255d92c8a751cc390bf6c9d5625797a6042230ac21299d788720d608b23d8133cae9962655a56cec5cc1fcf3ef3cd6e","FECHA EXPEDICIÓN":"12/1/2022","FECHA VENCIMIENTO CLIENTE":"30/01/2023","Nombre Proveedor":"AZUL K SAS","NIT Proveedor":8600001356,"Nombre Deudor":"D1 SAS","NIT Deudor":9002769621,"VIN":"KNAB3512BPT032145","Valor Factura RADIAN":90743488,"Valor Factura DESEMBOLSO":90743488},{"NRO FACTURA":"ME256869","CUFE/CUDE":"ceeaeb4d4999dd80843557f6206eb6712cbb70412bd4754f66ad6a8cf2cfa81b6246249fdab1140b35752f17c8f07c9a","FECHA EXPEDICIÓN":"12/1/2022","FECHA VENCIMIENTO CLIENTE":"30/01/2023","Nombre Proveedor":"AZUL K SAS","NIT Proveedor":8600001356,"Nombre Deudor":"D1 SAS","NIT Deudor":9002769621,"VIN":"KNAB3512BPT031626","Valor Factura RADIAN":157009998,"Valor Factura DESEMBOLSO":157009998},{"NRO FACTURA":"ME257106","CUFE/CUDE":"9887cd7bb6059f77db6554ece0c51f5ade07bce7071b924c52168f6d444ab1fd3969e24da17ab41860838364a667fe8e","FECHA EXPEDICIÓN":"12/1/2022","FECHA VENCIMIENTO CLIENTE":"30/01/2023","Nombre Proveedor":"AZUL K SAS","NIT Proveedor":8600001356,"Nombre Deudor":"D1 SAS","NIT Deudor":9002769621,"VIN":"KNAB3512BPT032128","Valor Factura RADIAN":20691720,"Valor Factura DESEMBOLSO":20691720}]}]'
    localStorage.setItem("requestValidation", data);
    component.localStorageSaving(request);
    expect(localStorage.getItem).toHaveBeenCalled()
    expect(localStorage.setItem).toHaveBeenCalled()
    localStorage.clear();
  });

  it('Prueba del LocalStorage Saving Else', () => {
    jest.spyOn(Storage.prototype, 'getItem');
    jest.spyOn(Storage.prototype, 'setItem');
    const request = [
      {
        "NIT Proveedor": 8600001356,
        "Nombre Proveedor": "AZUL K SAS",
        "fileName": "Bdb_Factoring_V04.xlsm",
        "fileStatus": 1
      },
      {
        "fields_error": {},
        "noFactura": "B1599373"
      },
      {
        "fields_error": {},
        "noFactura": "B1599375"
      }
    ]
    component.localStorageSaving(request);
    expect(localStorage.getItem).toHaveBeenCalled()
    expect(localStorage.setItem).toHaveBeenCalled()
  });
  
  
  it('Prueba Push files to Html Ok', () => {
    component.fileName = "name";
    component.fileStatus=1;
    component.pushFilesToHtml();
    expect(component.localLoadedFiles.length).toEqual(0);
    component.data.push({
      status: 'success',
      filename: "nn",
      actions: [
        {
          "label":"Eliminar"
        }
      ]
    });
    component.pushFilesToHtml();
    expect(component.localLoadedFiles.length).toEqual(0);
    component.data.push({
      status: 'loading',
      filename: component.fileName,
      actions: [
        {
          "label":"Eliminar"
        }
      ]
    });
    component.pushFilesToHtml();
    expect(component.localLoadedFiles.length).toBeGreaterThan(0);
  });

  it('Prueba Push files to Html Error Duplicado', () => {
    component.fileStatus = -1;
    component.pdfStatus = -2;
    component.fileName = "name";
    component.data.push({
      status: 'loading',
      filename: component.fileName,
      actions: [
        {
          "label":"Eliminar"
        }
      ]
    });
    component.pushFilesToHtml();
    component.donwloadErrorsPdf();
    expect(component.trackingErrorArr.length).toBeGreaterThan(0);
  });

  it('Prueba Push files to Html Error', () => {
    component.fileStatus = -1;
    component.pdfStatus = 0;
    component.fileName = "name";
    component.data.push({
      status: 'loading',
      filename: component.fileName,
      actions: [
        {
          "label":"Eliminar"
        }
      ]
    });
    component.pushFilesToHtml();
    component.donwloadErrorsPdf();
    expect(component.trackingErrorArr.length).toBeGreaterThan(0);
  });



  it('Prueba Files to Delete', () => {
    const event = {
      detail: { card: { title: "title1" } }
    } as any;
    component.selectFilestoDelete(event);
    expect(component.filesToDelete[0]).toEqual(event.detail.card.title);
  });

  it('Prueba Files to Delete ok', () => {
    component.filesToDelete = ["title1"];
    const event = {
      detail:
      {
        card:
        {
          title: "title1"
        }
      }
    };
    component.selectFilestoDelete(event);
    expect(component.filesToDelete.length).toEqual(0);
  });

  it('Prueba deleteFiles reboot', () => {
    component.deleteFiles();
    expect(component.filesToDelete.length).toBe(0);
  });

  it('Prueba deleteFiles reboot 2', () => {
    component.filesToDelete = [{ name: "name1" }];
    component.loadedFiles = [{ name: "name1" }, { name: "name2" }];
    component.trackingErrorArr = [{ name: "name1" }, { name: "name2" }];
    component.deleteFiles();
    expect(component.loadedFiles.length).toBe(2);
    expect(component.trackingErrorArr.length).toBe(2);
    expect(component.filesToDelete.length).toBe(0);
    component.loadedFiles = [];
    component.trackingErrorArr = [];
  });

  it('Prueba excelToJson', () => {
    const event = {
      detail:
      {
        name: "name.xlsx"
      }
    };
    component.excelToJson(event);
    expect(component.fileName).toEqual("name.xlsx");
  });

  it('Prueba addFileLoadedSherpaComponent', () => {
    const event = {
      detail:
      {
        name: "name.xlsx"
      }
    };
    component.excelData = [];
    expect(component.addFileLoadedSherpaComponent(event)).toBe(false);
    component.data = []
    component.excelData = [""];
    component.addFileLoadedSherpaComponent(event);
    expect(component.data.length).toEqual(1);
  });

  it('Prueba funcion deleteFile', () => {
    const event = {
      detail:
      {
        id: 0,
        item: {
          status: "error"
        },
        name: "file Name"
      }
    };
    component.data.push({
      status: 'error',
      filename: "file Name",
      isDelete: 'true',
      message: "El archivo tiene errores en los campos.",
      linkButton: "Descargar carta de errores"
    });
    component.deleteFile(event);
    expect(component.data.length).toEqual(0);
  });

  it('Prueba deleteFile', () => {
    const event = {
      detail:
      {
        name: "name.xlsx",
        item: {
          status: "error"
        },
        id: 0
      }
    };
    component.numFilesErrors = 1;
    component.data = ['0'];
    expect(component.data.length).toEqual(1);
    component.deleteFile(event);
    expect(component.numFilesErrors).toBe(0);
    expect(component.data.length).toEqual(0);
    const event2 = {
      detail:
      {
        name: "name.xlsx",
        item: {
          status: "loading"
        },
        id: 0
      }
    };
    component.deleteFile(event2);
    expect(component.loadingFile).toBe(false);
    
  });

  it('Prueba compareArrays', () => {
    expect(component.compareArrays([])).toBe(false);
    expect(component.compareArrays(['NRO FACTURA', 'CUFE/CUDE', 'FECHA EXPEDICIÓN FACTURA',
      'FECHA VENCIMIENTO', 'NOMBRE PROVEEDOR', 'NIT PROVEEDOR', 'NOMBRE DEUDOR',
      'NIT DEUDOR', 'VIN', 'VALOR FACTURA RADIAN', 'VALOR FACTURA DESEMBOLSO'])).toBe(false);
    expect(component.compareArrays(['NRO FACTURA', 'CUFE/CUDE', 'FECHA EXPEDICIÓN FACTURA',
      'FECHA VENCIMIENTO PROVEEDOR', 'NOMBRE PROVEEDOR', 'NIT PROVEEDOR', 'NOMBRE DEUDOR',
      'NIT DEUDOR', 'VIN', 'VALOR FACTURA RADIAN', 'VALOR FACTURA DESEMBOLSO'])).toBe(true);
  });

  const eventFile = {
    detail:  {
      "result": "data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,",
      name: "Factoring - BdB - LDF(HojaOculta).xlsx",
      type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
      lastModified: 1679071616364,
      lastModifiedDate:"2023-03-17T16:46:56.364Z",
      size: 13191,
      webkitRelativePath: ""

    }
  }
  it('Prueba funcion arrayHeaderFileExcel', () => {
    component.fileOnLoad(eventFile.detail)
    component.importFile(eventFile);
    component.waitResponseValidationExcel(1);
    expect(component.loadingFile).toBe(false)
    const header = {
      A1: { h: 'NRO FACTURA' },
      B1: { h: 'CUFE/CUDE' },
      C1: { h: 'FECHA EXPEDICIÓN FACTURA' },
      D1: { h: 'FECHA VENCIMIENTO PROVEEDOR' },
      E1: { h: 'NOMBRE PROVEEDOR' },
      F1: { h: 'NIT PROVEEDOR' },
      G1: { h: 'NOMBRE DEUDOR' },
      H1: { h: 'NIT DEUDOR' },
      I1: { h: 'VIN' },
      J1: { h: 'VALOR FACTURA RADIAN' },
      K1: { h: 'VALOR FACTURA DESEMBOLSO' }
    };
    const ar2 = ['NRO FACTURA', 'CUFE/CUDE', 'FECHA EXPEDICIÓN FACTURA',
      'FECHA VENCIMIENTO PROVEEDOR', 'NOMBRE PROVEEDOR', 'NIT PROVEEDOR', 'NOMBRE DEUDOR',
      'NIT DEUDOR', 'VIN', 'VALOR FACTURA RADIAN', 'VALOR FACTURA DESEMBOLSO']
    expect(component.arrayHeaderFileExcel(header)[0]).toBe(ar2[0]);
    expect(component.arrayHeaderFileExcel({A1: { h: 'NRO FACTURA' }})[0]).toBe(ar2[0]);
  });


  it('Probar  funcion fileOnLoad()', (done) => {
    done();
    component.fileOnLoad(eventFile.detail)
  });
  it('Prueba Split Invoice', async () => {
    const object = [
      {
          "NRO FACTURA": "0026656649",
          "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
          "FECHA EXPEDICIÓN FACTURA": 44999,
          "FECHA VENCIMIENTO PROVEEDOR": 45029,
          "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
          "NIT PROVEEDOR": "8600204395",
          "NOMBRE DEUDOR": "AGROEXPORT",
          "NIT DEUDOR": "8600484293",
          "VALOR FACTURA RADIAN": 20050000,
          "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      },
      {
        "NRO FACTURA": "0026656649",
        "CUFE/CUDE": "9bec6b45677322b365075dcc7c254e394116a41184ad9c29295925124b5f5846d4a6fc51dae2d6a6f93844b0603b29ca",
        "FECHA EXPEDICIÓN FACTURA": 44999,
        "FECHA VENCIMIENTO PROVEEDOR": 45029,
        "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
        "NIT PROVEEDOR": "8600204395",
        "NOMBRE DEUDOR": "AGROEXPORT",
        "NIT DEUDOR": "8600484293",
        "VALOR FACTURA RADIAN": 20050000,
        "VALOR FACTURA DESEMBOLSO": 20050000
      }
    ];
    const objectData = {
      "fileName": "MONOMEROS COLOMBO VENEZOLANOS - FACTORING - FEBRERO.xlsx",
      "data": object
    }
    const expected = [
      {
          "NIT PROVEEDOR": 8600204395,
          "NOMBRE PROVEEDOR": "MONOMEROS COLOMBO VENEZOLANOS",
          "fileName": "facturas_24_03_23.xlsx",
          "fileStatus": -1,
          "pdfStatus": -2
      },
      {
          "fields_error": {
              "CUFE/CUDE": [
                  "El CUFE/CUDE ya se encuentra en la base de datos."
              ],
              "NRO FACTURA": [
                  "la factura se encuentra duplicada para este proveedor",
                  "la factura se encuentra duplicada para este proveedor",
                  "la factura se encuentra duplicada para este proveedor",
                  "la factura se encuentra duplicada para este proveedor"
              ]
          },
          "noFactura": "0026656649",
          "nombreProveedor": "MONOMEROS COLOMBO VENEZOLANOS"
      }
    ];
    let serviceMock = {
      addExcel: async (data: any) => {
        return expected
      }
    }
    const splitResponse = await component.splitInvoice(objectData, serviceMock);
    expect(splitResponse[0]).toEqual(expected[0])
    expect(splitResponse[1]).toEqual(expected[1])
  })
});
